[gd_scene load_steps=9 format=2]

[ext_resource path="res://src/battle/anim/BattlerAnim.gd" type="Script" id=1]
[ext_resource path="res://assets/characters/proto-character.png" type="Texture" id=2]

[sub_resource type="Animation" id=1]
resource_name = "_setup"
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=2]
resource_name = "attack"
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.2, 0.55 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 500, 0 ), Vector2( 0, 0 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("..")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "triggered" ],
"method": "emit_signal"
} ]
}

[sub_resource type="Animation" id=3]
resource_name = "die"
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.35, 0.4, 0.55 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 0.980392, 0.211765, 0.211765, 1 ), Color( 0.992157, 0.992157, 0.992157, 1 ), Color( 0.980392, 0.211765, 0.211765, 1 ), Color( 1, 1, 1, 1 ), Color( 0.980392, 0.211765, 0.211765, 1 ), Color( 1, 1, 1, 1 ), Color( 0.980392, 0.211765, 0.211765, 1 ), Color( 0.980392, 0.211765, 0.211765, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.35, 0.4, 0.55 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1 ), Vector2( 1, 1.2 ), Vector2( 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.55 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=4]
resource_name = "_setup"
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=5]
resource_name = "take_damage"
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.35, 0.45, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 0.980392, 0.211765, 0.211765, 1 ), Color( 1, 1, 1, 1 ), Color( 0.980392, 0.211765, 0.211765, 1 ), Color( 1, 1, 1, 1 ), Color( 0.980392, 0.211765, 0.211765, 1 ), Color( 1, 1, 1, 1 ), Color( 0.980392, 0.211765, 0.211765, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 490.308, 919.558 )

[node name="BattlerAnim" type="Position2D"]
scale = Vector2( -1, 1 )
script = ExtResource( 1 )

[node name="Pivot" type="Position2D" parent="."]

[node name="AnimationPlayer" type="AnimationPlayer" parent="Pivot"]
autoplay = "_setup"
anims/_setup = SubResource( 1 )
anims/attack = SubResource( 2 )
anims/die = SubResource( 3 )

[node name="AnimationPlayerDamage" type="AnimationPlayer" parent="Pivot"]
anims/_setup = SubResource( 4 )
anims/take_damage = SubResource( 5 )

[node name="Area2D" type="Area2D" parent="Pivot"]
collision_layer = 2
collision_mask = 2

[node name="Sprite" type="Sprite" parent="Pivot/Area2D"]
texture = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Pivot/Area2D"]
shape = SubResource( 6 )

[node name="Tween" type="Tween" parent="."]

[node name="TopAnchor" type="Position2D" parent="."]
position = Vector2( 0, -966 )
__meta__ = {
"_gizmo_extents_": 40.0
}

[node name="BottomAnchor" type="Position2D" parent="."]
position = Vector2( 0, 966 )
__meta__ = {
"_gizmo_extents_": 40.0
}
[connection signal="animation_finished" from="Pivot/AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
[connection signal="animation_finished" from="Pivot/AnimationPlayerDamage" to="." method="_on_AnimationPlayer_animation_finished"]
